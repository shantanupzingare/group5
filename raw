Msg 2715, Level 16, State 3, Procedure usp_UpsertStudentData, Line 12
Column, parameter, or variable #1: Cannot find data type StudentDataType.
Parameter or variable '@StudentData' has an invalid data type.
Msg 1087, Level 16, State 1, Procedure usp_UpsertStudentData, Line 17
Must declare the table variable "@StudentData".


create table StudentData(
Id INT PRIMARY KEY,
Name NVARCHAR(100),
Email NVARCHAR(100),
Subject NVARCHAR(100),
Marks INT
);
SELECT * FROM StudentData;


CREATE PROCEDURE usp_UpsertStudentData
@StudentData StudentDataType READONLY
as
Begin
Set NOCOUNT ON;
MERGE INTO STUDENTDATA AS TARGET
USING @STUDENTDATA AS SOURCE
ON TARGET.ID=SOURCE.ID
WHEN MATCHED THEN
UPDATE SET
NAME=SOURCE.NAME,
EMAIL=SOURCE.EMAIL,
SUBJECT=SOURCE.SUBJECT,
MARKS=SOURCE.MARKS
WHEN NOT MATCHED BY TARGET THEN
INSERT(ID,NAME,EMAIL,SUBJECT,MARKS)
VALUES(SOURCE.ID,SOURCE.NAME,SOURCE.EMAIL,SOURCE.SUBJECT,SOURCE.MARKS);
END;



CREATE PROCEDURE usp_UpsertStudentData
    @StudentData StudentDataType READONLY
AS
BEGIN
    SET NOCOUNT ON;

    ;WITH NumberedRows AS (
        SELECT *,
               ROW_NUMBER() OVER (PARTITION BY ID ORDER BY (SELECT NULL)) AS rn,
               COUNT(*) OVER (PARTITION BY ID) AS cnt
        FROM @StudentData
    ),
    DeduplicatedSource AS (
        SELECT *
        FROM NumberedRows
        WHERE 
            -- If only one row for ID, pick rn = 1
            (cnt = 1 AND rn = 1)
            -- If multiple rows, pick rn = 2 (second occurrence)
            OR (cnt > 1 AND rn = 2)
    )

    MERGE INTO StudentData AS target
    USING DeduplicatedSource AS source
    ON target.ID = source.ID
    WHEN MATCHED THEN 
        UPDATE SET 
            Name = source.Name,
            Email = source.Email,
            Subject = source.Subject,
            Marks = source.Marks
    WHEN NOT MATCHED BY TARGET THEN
        INSERT (ID, Name, Email, Subject, Marks)
        VALUES (source.ID, source.Name, source.Email, source.Subject, source.Marks);
END;

